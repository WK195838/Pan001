<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="IncomeTaxQuery" targetNamespace="http://tempuri.org/IncomeTaxQuery.xsd" xmlns:mstns="http://tempuri.org/IncomeTaxQuery.xsd" xmlns="http://tempuri.org/IncomeTaxQuery.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="MyConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="MyConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.MyConnectionString.ConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTable1TableAdapter" Name="DataTable1">
            <MainSource>
              <DbSource ConnectionRef="MyConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT         Tax.Company, Tax.EmployeeId, Personnel_Master.DeptId, 
                          Department.DepName, Tax.SalaryAmount, RTRIM(CONVERT(char, 
                          CONVERT(decimal, LEFT(Tax.SalaryYM, 4)) - 1911)) + '\' + RIGHT(Tax.SalaryYM, 
                          2) AS SalaryYM, Personnel_Master.EmployeeName, 
                          Working.OtherNWSalary
FROM             (SELECT         PWD.Company, PWD.EmployeeId, PWD.SalaryYM, 
                                                      SUM((CASE PMType WHEN 'A' THEN IsNull(PWD.SalaryAmount, 0) 
                                                      ELSE IsNull(PWD.SalaryAmount, 0) * - 1 END)) 
                                                      AS OtherNWSalary
                           FROM              PayrollWorking_Detail AS PWD LEFT OUTER JOIN
                                                      Payroll_Master_OtherDetail AS PMO ON 
                                                      PWD.Company = PMO.Company AND 
                                                      PWD.EmployeeId = PMO.EmployeeId AND 
                                                      PWD.SalaryYM = PMO.SalaryYM AND 
                                                      PWD.PeriodCode = PMO.PeriodCode AND 
                                                      PWD.SalaryItem = PMO.SalaryItem LEFT OUTER JOIN
                                                      SalaryStructure_Parameter AS SP ON 
                                                      PWD.SalaryItem = SP.SalaryId
                           GROUP BY   PWD.Company, PWD.EmployeeId, PWD.SalaryYM) 
                          AS Working RIGHT OUTER JOIN
                              (SELECT         Company, EmployeeId, SalaryYM, PeriodCode, SalaryItem, 
                                                           SalaryAmount
                                FROM              PayrollWorking_Detail
                                WHERE          (SalaryItem = '05')) AS Tax ON 
                          Working.Company = Tax.Company AND 
                          Working.EmployeeId = Tax.EmployeeId AND 
                          Working.SalaryYM = Tax.SalaryYM LEFT OUTER JOIN
                              (SELECT         Company, EmployeeId, EmployeeName, DeptId
                                FROM              Personnel_Master) AS Personnel_Master ON 
                          Working.Company = Personnel_Master.Company AND 
                          Working.EmployeeId = Personnel_Master.EmployeeId LEFT OUTER JOIN
                              (SELECT         Company, DepCode, DepName
                                FROM              Department) AS Department ON 
                          Personnel_Master.Company = Department.Company AND 
                          Personnel_Master.DeptId = Department.DepCode
ORDER BY  SalaryYM, Working.EmployeeId</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Company" DataSetColumn="Company" />
              <Mapping SourceColumn="EmployeeId" DataSetColumn="EmployeeId" />
              <Mapping SourceColumn="SalaryYM" DataSetColumn="SalaryYM" />
              <Mapping SourceColumn="EmployeeName" DataSetColumn="EmployeeName" />
              <Mapping SourceColumn="OtherNWSalary" DataSetColumn="OtherNWSalary" />
              <Mapping SourceColumn="SalaryAmount" DataSetColumn="SalaryAmount" />
              <Mapping SourceColumn="DeptId" DataSetColumn="DeptId" />
              <Mapping SourceColumn="DepName" DataSetColumn="DepName" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="IncomeTaxQuery" msdata:IsDataSet="true" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DataTable1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Company" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EmployeeId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SalaryYM" msdata:ReadOnly="true" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="35" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EmployeeName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OtherNWSalary" msdata:ReadOnly="true" type="xs:decimal" minOccurs="0" />
              <xs:element name="SalaryAmount" type="xs:decimal" minOccurs="0" />
              <xs:element name="DeptId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DepName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="16" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ResignCode" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>